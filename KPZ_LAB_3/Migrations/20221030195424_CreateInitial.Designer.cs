// <auto-generated />
using System;
using KPZ_LAB_3.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace KPZ_LAB_3.Migrations
{
    [DbContext(typeof(JewelryStoreDbContext))]
    [Migration("20221030195424_CreateInitial")]
    partial class CreateInitial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "Ukrainian_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("KPZ_LAB_3.Repository.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("email");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("password");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("username");

                    b.HasKey("Id");

                    b.ToTable("customer");
                });

            modelBuilder.Entity("KPZ_LAB_3.Repository.Models.CustomerOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("customer_id");

                    b.Property<int>("CustomerOrderStatusId")
                        .HasColumnType("int")
                        .HasColumnName("customer_order_status_id");

                    b.Property<DateTime>("OperationTime")
                        .HasColumnType("datetime")
                        .HasColumnName("operation_time");

                    b.Property<int>("PaymentTypeId")
                        .HasColumnType("int")
                        .HasColumnName("payment_type_id");

                    b.Property<int?>("SalerId")
                        .HasColumnType("int")
                        .HasColumnName("saler_id");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("CustomerOrderStatusId");

                    b.HasIndex("PaymentTypeId");

                    b.HasIndex("SalerId");

                    b.ToTable("customer_order");
                });

            modelBuilder.Entity("KPZ_LAB_3.Repository.Models.CustomerOrderStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("customer_order_status");
                });

            modelBuilder.Entity("KPZ_LAB_3.Repository.Models.Delivery", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustomerOrderId")
                        .HasColumnType("int")
                        .HasColumnName("customer_order_id");

                    b.Property<string>("DeliveryMethod")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("delivery_method");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("price");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "CustomerOrderId" }, "UQ__delivery__1A3F6EA1E7F6605B")
                        .IsUnique();

                    b.ToTable("delivery");
                });

            modelBuilder.Entity("KPZ_LAB_3.Repository.Models.Manufacturer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("manufacturer");
                });

            modelBuilder.Entity("KPZ_LAB_3.Repository.Models.OrderDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustomerOrderId")
                        .HasColumnType("int")
                        .HasColumnName("customer_order_id");

                    b.Property<int>("ProductAmount")
                        .HasColumnType("int")
                        .HasColumnName("product_amount");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("product_id");

                    b.HasKey("Id");

                    b.HasIndex("CustomerOrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("order_details");
                });

            modelBuilder.Entity("KPZ_LAB_3.Repository.Models.PaymentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("payment_type");
                });

            modelBuilder.Entity("KPZ_LAB_3.Repository.Models.PersonDatum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("city");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("customer_id");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("date")
                        .HasColumnName("date_of_birth");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("phone_number");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("street");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("surname");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "CustomerId" }, "UQ__person_d__CD65CB848CC34CE3")
                        .IsUnique();

                    b.ToTable("person_data");
                });

            modelBuilder.Entity("KPZ_LAB_3.Repository.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Discount")
                        .HasColumnType("int")
                        .HasColumnName("discount");

                    b.Property<int>("ManufacturerId")
                        .HasColumnType("int")
                        .HasColumnName("manufacturer_id");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("price");

                    b.Property<int>("ProductCollectionId")
                        .HasColumnType("int")
                        .HasColumnName("product_collection_id");

                    b.Property<int>("ProductTypeId")
                        .HasColumnType("int")
                        .HasColumnName("product_type_id");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("weight");

                    b.HasKey("Id");

                    b.HasIndex("ManufacturerId");

                    b.HasIndex("ProductCollectionId");

                    b.HasIndex("ProductTypeId");

                    b.ToTable("product");
                });

            modelBuilder.Entity("KPZ_LAB_3.Repository.Models.ProductCollection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("product_collection");
                });

            modelBuilder.Entity("KPZ_LAB_3.Repository.Models.ProductComposition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("product_id");

                    b.Property<int>("ProductMaterialId")
                        .HasColumnType("int")
                        .HasColumnName("product_material_id");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("ProductMaterialId");

                    b.ToTable("product_composition");
                });

            modelBuilder.Entity("KPZ_LAB_3.Repository.Models.ProductMaterial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("product_material");
                });

            modelBuilder.Entity("KPZ_LAB_3.Repository.Models.ProductType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("product_type");
                });

            modelBuilder.Entity("KPZ_LAB_3.Repository.Models.Saler", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("IsManager")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("isManager")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Name")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("saler");
                });

            modelBuilder.Entity("KPZ_LAB_3.Repository.Models.VCustomerOrderSalerInfoCheck", b =>
                {
                    b.Property<string>("CustomerUsername")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("customer_username");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("email");

                    b.Property<DateTime>("OperationTime")
                        .HasColumnType("datetime")
                        .HasColumnName("operation_time");

                    b.Property<string>("Saler")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("saler");

                    b.ToView("vCustomerOrderSalerInfoCheck");
                });

            modelBuilder.Entity("KPZ_LAB_3.Repository.Models.VCustomerOrderSalerInfoCheck2", b =>
                {
                    b.Property<string>("CustomerUsername")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("customer_username");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("email");

                    b.Property<DateTime>("OperationTime")
                        .HasColumnType("datetime")
                        .HasColumnName("operation_time");

                    b.Property<string>("Saler")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("saler");

                    b.ToView("vCustomerOrderSalerInfoCheck2");
                });

            modelBuilder.Entity("KPZ_LAB_3.Repository.Models.CustomerOrder", b =>
                {
                    b.HasOne("KPZ_LAB_3.Repository.Models.Customer", "Customer")
                        .WithMany("CustomerOrders")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK__customer___custo__2A4B4B5E")
                        .IsRequired();

                    b.HasOne("KPZ_LAB_3.Repository.Models.CustomerOrderStatus", "CustomerOrderStatus")
                        .WithMany("CustomerOrders")
                        .HasForeignKey("CustomerOrderStatusId")
                        .HasConstraintName("FK__customer___custo__2C3393D0")
                        .IsRequired();

                    b.HasOne("KPZ_LAB_3.Repository.Models.PaymentType", "PaymentType")
                        .WithMany("CustomerOrders")
                        .HasForeignKey("PaymentTypeId")
                        .HasConstraintName("FK__customer___payme__2B3F6F97")
                        .IsRequired();

                    b.HasOne("KPZ_LAB_3.Repository.Models.Saler", "Saler")
                        .WithMany("CustomerOrders")
                        .HasForeignKey("SalerId");

                    b.Navigation("Customer");

                    b.Navigation("CustomerOrderStatus");

                    b.Navigation("PaymentType");

                    b.Navigation("Saler");
                });

            modelBuilder.Entity("KPZ_LAB_3.Repository.Models.Delivery", b =>
                {
                    b.HasOne("KPZ_LAB_3.Repository.Models.CustomerOrder", "CustomerOrder")
                        .WithOne("Delivery")
                        .HasForeignKey("KPZ_LAB_3.Repository.Models.Delivery", "CustomerOrderId")
                        .HasConstraintName("FK__delivery__custom__47DBAE45")
                        .IsRequired();

                    b.Navigation("CustomerOrder");
                });

            modelBuilder.Entity("KPZ_LAB_3.Repository.Models.OrderDetail", b =>
                {
                    b.HasOne("KPZ_LAB_3.Repository.Models.CustomerOrder", "CustomerOrder")
                        .WithMany("OrderDetails")
                        .HasForeignKey("CustomerOrderId")
                        .HasConstraintName("FK__order_det__custo__3F466844")
                        .IsRequired();

                    b.HasOne("KPZ_LAB_3.Repository.Models.Product", "Product")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK__order_det__produ__403A8C7D")
                        .IsRequired();

                    b.Navigation("CustomerOrder");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("KPZ_LAB_3.Repository.Models.PersonDatum", b =>
                {
                    b.HasOne("KPZ_LAB_3.Repository.Models.Customer", "Customer")
                        .WithOne("PersonDatum")
                        .HasForeignKey("KPZ_LAB_3.Repository.Models.PersonDatum", "CustomerId")
                        .HasConstraintName("FK__person_da__custo__440B1D61")
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("KPZ_LAB_3.Repository.Models.Product", b =>
                {
                    b.HasOne("KPZ_LAB_3.Repository.Models.Manufacturer", "Manufacturer")
                        .WithMany("Products")
                        .HasForeignKey("ManufacturerId")
                        .HasConstraintName("FK__product__manufac__37A5467C")
                        .IsRequired();

                    b.HasOne("KPZ_LAB_3.Repository.Models.ProductCollection", "ProductCollection")
                        .WithMany("Products")
                        .HasForeignKey("ProductCollectionId")
                        .HasConstraintName("FK__product__product__38996AB5")
                        .IsRequired();

                    b.HasOne("KPZ_LAB_3.Repository.Models.ProductType", "ProductType")
                        .WithMany("Products")
                        .HasForeignKey("ProductTypeId")
                        .HasConstraintName("FK__product__product__36B12243")
                        .IsRequired();

                    b.Navigation("Manufacturer");

                    b.Navigation("ProductCollection");

                    b.Navigation("ProductType");
                });

            modelBuilder.Entity("KPZ_LAB_3.Repository.Models.ProductComposition", b =>
                {
                    b.HasOne("KPZ_LAB_3.Repository.Models.Product", "Product")
                        .WithMany("ProductCompositions")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK__product_c__produ__3B75D760")
                        .IsRequired();

                    b.HasOne("KPZ_LAB_3.Repository.Models.ProductMaterial", "ProductMaterial")
                        .WithMany("ProductCompositions")
                        .HasForeignKey("ProductMaterialId")
                        .HasConstraintName("FK__product_c__produ__3C69FB99")
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("ProductMaterial");
                });

            modelBuilder.Entity("KPZ_LAB_3.Repository.Models.Customer", b =>
                {
                    b.Navigation("CustomerOrders");

                    b.Navigation("PersonDatum");
                });

            modelBuilder.Entity("KPZ_LAB_3.Repository.Models.CustomerOrder", b =>
                {
                    b.Navigation("Delivery");

                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("KPZ_LAB_3.Repository.Models.CustomerOrderStatus", b =>
                {
                    b.Navigation("CustomerOrders");
                });

            modelBuilder.Entity("KPZ_LAB_3.Repository.Models.Manufacturer", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("KPZ_LAB_3.Repository.Models.PaymentType", b =>
                {
                    b.Navigation("CustomerOrders");
                });

            modelBuilder.Entity("KPZ_LAB_3.Repository.Models.Product", b =>
                {
                    b.Navigation("OrderDetails");

                    b.Navigation("ProductCompositions");
                });

            modelBuilder.Entity("KPZ_LAB_3.Repository.Models.ProductCollection", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("KPZ_LAB_3.Repository.Models.ProductMaterial", b =>
                {
                    b.Navigation("ProductCompositions");
                });

            modelBuilder.Entity("KPZ_LAB_3.Repository.Models.ProductType", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("KPZ_LAB_3.Repository.Models.Saler", b =>
                {
                    b.Navigation("CustomerOrders");
                });
#pragma warning restore 612, 618
        }
    }
}
